---
- include_tasks: setup-Debian.yml
  when: ansible_os_family == "Debian"

- include_tasks: setup-Redhat.yml
  when: ansible_os_family == "RedHat" or ansible_os_family == "Rocky"

- name: Checking for scsi devices
  command: sg_scan
  become: true
  register: scsi_devices
  changed_when: false

- name: Rescanning for new disks added
  command: "{{ lvm_rescanning_script }}"
  become: true
  changed_when: false

- name: "Check if extra disk exist"
  stat:
    path: '{{ lvm_free_space_disk[:-1] }}'
  changed_when: false
  register: extra_disk

- when: extra_disk.stat.exists
  block:
    - name: Check if empty space analocated
      shell: parted {{ lvm_free_space_disk[:-1] }} unit GB print free | grep 'Free Space' | tail -n1 | awk '{print $3}'
      register: parted_result
      changed_when: false

    - name: Show parted result
      debug:
        var: parted_result.stdout_lines

    - name: Get parted info
      parted:
        device: "{{ lvm_free_space_disk[:-1] }}"
        unit: MiB
      ignore_errors: true
      register: sdb_info

    - name: Show parted infos
      debug:
        var: sdb_info

    - name: Remove partition number 1
      parted:
        device: "{{ lvm_free_space_disk[:-1] }}"
        number: "{{ lvm_free_space_disk[-1] }}"
        state: absent
      when:
        - lvm_groups is defined
        - manage_lvm|bool
        - (parted_result is defined) and (parted_result.stdout_lines|length > 0) and (parted_result.stdout_lines[0] != "0.00GB")

    - name: Create lvm partition with empty space
      parted:
        device: "{{ lvm_free_space_disk[:-1] }}"
        number: "{{ lvm_free_space_disk[-1] }}"
        flags: [lvm]
        state: present
      when:
        - lvm_groups is defined
        - manage_lvm|bool
        - (sdb_info.rc is defined) and (sdb_info.rc == 0) or (sdb_info.disk is defined)

    - name: Resize of physical volumes
      command: "pvresize {{ lvm_free_space_disk }}"
      when:
        - (parted_result is defined) and (parted_result.stdout_lines|length > 0) and (parted_result.stdout_lines[0] != "0.00GB")

    - name: Manage physical volume group creation
      include_tasks: create_vg.yml
      loop: "{{ lvm_groups }}"
      loop_control:
        loop_var: vg
      when:
        - lvm_groups is defined
        - manage_lvm|bool
        - (sdb_info.rc is defined) and (sdb_info.rc == 0) or (sdb_info.disk is defined)
